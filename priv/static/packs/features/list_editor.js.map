{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/list_editor/components/account.js","webpack:///./app/javascript/mastodon/features/list_editor/components/search.js","webpack:///./app/javascript/mastodon/features/list_editor/index.js"],"names":["messages","Object","index_es","remove","id","defaultMessage","add","account_Account","es","getAccount","selectors","state","_ref","accountId","added","account","getIn","includes","dispatch","_ref2","onRemove","lists","onAdd","render","_props","this","props","intl","button","jsx_default","icon_button","icon","title","formatMessage","onClick","className","avatar","size","display_name","react_immutable_pure_component_es","propTypes","ImmutablePropTypes_default","a","map","isRequired","prop_types_default","object","func","bool","defaultProps","search_messages","search","search_Search","value","onSubmit","onClear","onChange","handleChange","e","_this","target","handleKeyUp","keyCode","handleClear","hasValue","length","style","display","type","onKeyUp","placeholder","role","tabIndex","classnames_default","active","aria-label","react_default","PureComponent","list_editor_ListEditor","accountIds","searchAccountIds","onInitialize","listId","onReset","componentDidMount","componentWillUnmount","_props2","showSearch","optional_motion","defaultStyle","x","spring_default","stiffness","damping","transform","visibility","string","onClose","list"],"mappings":"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","file":"features/list_editor.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { makeGetAccount } from '../../../selectors';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Avatar from '../../../components/avatar';\nimport DisplayName from '../../../components/display_name';\nimport IconButton from '../../../components/icon_button';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { removeFromListEditor, addToListEditor } from '../../../actions/lists';\n\nconst messages = defineMessages({\n  remove: { id: 'lists.account.remove', defaultMessage: 'Remove from list' },\n  add: { id: 'lists.account.add', defaultMessage: 'Add to list' },\n});\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = (state, { accountId, added }) => ({\n    account: getAccount(state, accountId),\n    added: typeof added === 'undefined' ? state.getIn(['listEditor', 'accounts', 'items']).includes(accountId) : added,\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = (dispatch, { accountId }) => ({\n  onRemove: () => dispatch(removeFromListEditor(accountId)),\n  onAdd: () => dispatch(addToListEditor(accountId)),\n});\n\n@connect(makeMapStateToProps, mapDispatchToProps)\n@injectIntl\nexport default class Account extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.map.isRequired,\n    intl: PropTypes.object.isRequired,\n    onRemove: PropTypes.func.isRequired,\n    onAdd: PropTypes.func.isRequired,\n    added: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    added: false,\n  };\n\n  render () {\n    const { account, intl, onRemove, onAdd, added } = this.props;\n\n    let button;\n\n    if (added) {\n      button = <IconButton icon='times' title={intl.formatMessage(messages.remove)} onClick={onRemove} />;\n    } else {\n      button = <IconButton icon='plus' title={intl.formatMessage(messages.add)} onClick={onAdd} />;\n    }\n\n    return (\n      <div className='account'>\n        <div className='account__wrapper'>\n          <div className='account__display-name'>\n            <div className='account__avatar-wrapper'><Avatar account={account} size={36} /></div>\n            <DisplayName account={account} />\n          </div>\n\n          <div className='account__relationship'>\n            {button}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { fetchListSuggestions, clearListSuggestions, changeListSuggestions } from '../../../actions/lists';\nimport classNames from 'classnames';\n\nconst messages = defineMessages({\n  search: { id: 'lists.search', defaultMessage: 'Search among people you follow' },\n});\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['listEditor', 'suggestions', 'value']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: value => dispatch(fetchListSuggestions(value)),\n  onClear: () => dispatch(clearListSuggestions()),\n  onChange: value => dispatch(changeListSuggestions(value)),\n});\n\n@connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nexport default class Search extends React.PureComponent {\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.props.onChange(e.target.value);\n  }\n\n  handleKeyUp = e => {\n    if (e.keyCode === 13) {\n      this.props.onSubmit(this.props.value);\n    }\n  }\n\n  handleClear = () => {\n    this.props.onClear();\n  }\n\n  render () {\n    const { value, intl } = this.props;\n    const hasValue = value.length > 0;\n\n    return (\n      <div className='list-editor__search search'>\n        <label>\n          <span style={{ display: 'none' }}>{intl.formatMessage(messages.search)}</span>\n\n          <input\n            className='search__input'\n            type='text'\n            value={value}\n            onChange={this.handleChange}\n            onKeyUp={this.handleKeyUp}\n            placeholder={intl.formatMessage(messages.search)}\n          />\n        </label>\n\n        <div role='button' tabIndex='0' className='search__icon' onClick={this.handleClear}>\n          <i className={classNames('fa fa-search', { active: !hasValue })} />\n          <i aria-label={intl.formatMessage(messages.search)} className={classNames('fa fa-times-circle', { active: hasValue })} />\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { injectIntl } from 'react-intl';\nimport { setupListEditor, clearListSuggestions, resetListEditor } from '../../actions/lists';\nimport Account from './components/account';\nimport Search from './components/search';\nimport Motion from '../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\n\nconst mapStateToProps = state => ({\n  title: state.getIn(['listEditor', 'title']),\n  accountIds: state.getIn(['listEditor', 'accounts', 'items']),\n  searchAccountIds: state.getIn(['listEditor', 'suggestions', 'items']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onInitialize: listId => dispatch(setupListEditor(listId)),\n  onClear: () => dispatch(clearListSuggestions()),\n  onReset: () => dispatch(resetListEditor()),\n});\n\n@connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nexport default class ListEditor extends ImmutablePureComponent {\n\n  static propTypes = {\n    listId: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    onInitialize: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onReset: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    accountIds: ImmutablePropTypes.list.isRequired,\n    searchAccountIds: ImmutablePropTypes.list.isRequired,\n  };\n\n  componentDidMount () {\n    const { onInitialize, listId } = this.props;\n    onInitialize(listId);\n  }\n\n  componentWillUnmount () {\n    const { onReset } = this.props;\n    onReset();\n  }\n\n  render () {\n    const { title, accountIds, searchAccountIds, onClear } = this.props;\n    const showSearch = searchAccountIds.size > 0;\n\n    return (\n      <div className='modal-root__modal list-editor'>\n        <h4>{title}</h4>\n\n        <Search />\n\n        <div className='drawer__pager'>\n          <div className='drawer__inner list-editor__accounts'>\n            {accountIds.map(accountId => <Account key={accountId} accountId={accountId} added />)}\n          </div>\n\n          {showSearch && <div role='button' tabIndex='-1' className='drawer__backdrop' onClick={onClear} />}\n\n          <Motion defaultStyle={{ x: -100 }} style={{ x: spring(showSearch ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n            {({ x }) => (\n              <div className='drawer__inner backdrop' style={{ transform: x === 0 ? null : `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                {searchAccountIds.map(accountId => <Account key={accountId} accountId={accountId} />)}\n              </div>\n            )}\n          </Motion>\n        </div>\n      </div>\n    );\n  }\n\n}\n"],"sourceRoot":""}