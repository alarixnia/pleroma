{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/account_timeline/index.js"],"names":["AccountTimeline","Object","react_redux__WEBPACK_IMPORTED_MODULE_5__","state","_ref","accountId","params","_ref$withReplies","withReplies","undefined","path","statusIds","getIn","immutable__WEBPACK_IMPORTED_MODULE_15__","featuredStatusIds","isLoading","hasMore","handleLoadMore","maxId","_this","props","dispatch","_actions_timelines__WEBPACK_IMPORTED_MODULE_9__","componentWillMount","_props","this","_actions_accounts__WEBPACK_IMPORTED_MODULE_8__","componentWillReceiveProps","nextProps","render","_props2","shouldUpdateScroll","babel_runtime_helpers_jsx__WEBPACK_IMPORTED_MODULE_0___default","_ui_components_column__WEBPACK_IMPORTED_MODULE_12__","_components_loading_indicator__WEBPACK_IMPORTED_MODULE_11__","_components_column_back_button__WEBPACK_IMPORTED_MODULE_14__","_components_status_list__WEBPACK_IMPORTED_MODULE_10__","prepend","_containers_header_container__WEBPACK_IMPORTED_MODULE_13__","scrollKey","onLoadMore","react_immutable_pure_component__WEBPACK_IMPORTED_MODULE_16__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_7___default","a","object","isRequired","func","react_immutable_proptypes__WEBPACK_IMPORTED_MODULE_6___default","list","bool"],"mappings":"8UA0BqBA,EADpBC,OAAAC,EAAA,QAAAD,CAXuB,SAACE,EAADC,GAA2D,IAAvCC,EAAuCD,EAAjDE,OAAUD,UAAuCE,EAAAH,EAA1BI,mBAA0BC,IAAAF,KAC3EG,EAAOF,EAAiBH,EAAjB,gBAA4CA,EAEzD,OACEM,UAAWR,EAAMS,OAAO,YAAD,WAAyBF,EAAQ,SAAUT,OAAAY,EAAA,KAAAZ,IAClEa,kBAAmBN,EAAcP,OAAAY,EAAA,KAAAZ,GAAkBE,EAAMS,OAAO,YAAD,WAAyBP,EAAzB,UAA6C,SAAUJ,OAAAY,EAAA,KAAAZ,IACtHc,UAAWZ,EAAMS,OAAO,YAAD,WAAyBF,EAAQ,cACxDM,QAAWb,EAAMS,OAAO,YAAD,WAAyBF,EAAQ,+LAsC1DO,eAAiB,SAAAC,GACfC,EAAKC,MAAMC,SAASpB,OAAAqB,EAAA,EAAArB,CAAsBkB,EAAKC,MAAMd,OAAOD,WAAaa,QAAOV,YAAaW,EAAKC,MAAMZ,yDArB1Ge,8BAAsB,IAAAC,EAC2BC,KAAKL,MAAlCf,EADEmB,EACZlB,OAAUD,UAAaG,EADXgB,EACWhB,YAE/BiB,KAAKL,MAAMC,SAASpB,OAAAyB,EAAA,EAAAzB,CAAaI,IAC5BG,GACHiB,KAAKL,MAAMC,SAASpB,OAAAqB,EAAA,EAAArB,CAA8BI,IAEpDoB,KAAKL,MAAMC,SAASpB,OAAAqB,EAAA,EAAArB,CAAsBI,GAAaG,8BAGzDmB,mCAA2BC,IACpBA,EAAUtB,OAAOD,YAAcoB,KAAKL,MAAMd,OAAOD,WAAauB,EAAUtB,OAAOD,WAAcuB,EAAUpB,cAAgBiB,KAAKL,MAAMZ,eACrIiB,KAAKL,MAAMC,SAASpB,OAAAyB,EAAA,EAAAzB,CAAa2B,EAAUtB,OAAOD,YAC7CuB,EAAUpB,aACbiB,KAAKL,MAAMC,SAASpB,OAAAqB,EAAA,EAAArB,CAA8B2B,EAAUtB,OAAOD,YAErEoB,KAAKL,MAAMC,SAASpB,OAAAqB,EAAA,EAAArB,CAAsB2B,EAAUtB,OAAOD,WAAaG,YAAaoB,EAAUtB,OAAOE,6BAQ1GqB,kBAAU,IAAAC,EACyEL,KAAKL,MAA9EW,EADAD,EACAC,mBAAoBpB,EADpBmB,EACoBnB,UAAWG,EAD/BgB,EAC+BhB,kBAAmBC,EADlDe,EACkDf,UAAWC,EAD7Dc,EAC6Dd,QAErE,OAAKL,GAAaI,EAChBiB,IACGC,EAAA,UADH,EAAAD,IAEKE,EAAA,OAKPF,IACGC,EAAA,UADH,EAAAD,IAEKG,EAAA,MAFLH,IAIKI,EAAA,GAJLC,QAAAL,IAKgBM,EAAA,GALhBjC,UAK2CoB,KAAKL,MAAMd,OAAOD,YAL7DkC,UAMgB,mBANhB5B,UAOiBA,EAPjBG,kBAQyBA,EARzBC,UASiBA,EATjBC,QAUeA,EAVfwB,WAWkBf,KAAKR,eAXvBc,mBAY0BA,SA5DeU,EAAA,KAEpCC,WACLpC,OAAQqC,EAAAC,EAAUC,OAAOC,WACzBzB,SAAUsB,EAAAC,EAAUG,KAAKD,WACzBf,mBAAoBY,EAAAC,EAAUG,KAC9BpC,UAAWqC,EAAAJ,EAAmBK,KAC9BnC,kBAAmBkC,EAAAJ,EAAmBK,KACtClC,UAAW4B,EAAAC,EAAUM,KACrBlC,QAAS2B,EAAAC,EAAUM,KACnB1C,YAAamC,EAAAC,EAAUM","file":"features/account_timeline.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport { fetchAccount } from '../../actions/accounts';\nimport { expandAccountFeaturedTimeline, expandAccountTimeline } from '../../actions/timelines';\nimport StatusList from '../../components/status_list';\nimport LoadingIndicator from '../../components/loading_indicator';\nimport Column from '../ui/components/column';\nimport HeaderContainer from './containers/header_container';\nimport ColumnBackButton from '../../components/column_back_button';\nimport { List as ImmutableList } from 'immutable';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nconst mapStateToProps = (state, { params: { accountId }, withReplies = false }) => {\n  const path = withReplies ? `${accountId}:with_replies` : accountId;\n\n  return {\n    statusIds: state.getIn(['timelines', `account:${path}`, 'items'], ImmutableList()),\n    featuredStatusIds: withReplies ? ImmutableList() : state.getIn(['timelines', `account:${accountId}:pinned`, 'items'], ImmutableList()),\n    isLoading: state.getIn(['timelines', `account:${path}`, 'isLoading']),\n    hasMore:   state.getIn(['timelines', `account:${path}`, 'hasMore']),\n  };\n};\n\n@connect(mapStateToProps)\nexport default class AccountTimeline extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    shouldUpdateScroll: PropTypes.func,\n    statusIds: ImmutablePropTypes.list,\n    featuredStatusIds: ImmutablePropTypes.list,\n    isLoading: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    withReplies: PropTypes.bool,\n  };\n\n  componentWillMount () {\n    const { params: { accountId }, withReplies } = this.props;\n\n    this.props.dispatch(fetchAccount(accountId));\n    if (!withReplies) {\n      this.props.dispatch(expandAccountFeaturedTimeline(accountId));\n    }\n    this.props.dispatch(expandAccountTimeline(accountId, { withReplies }));\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if ((nextProps.params.accountId !== this.props.params.accountId && nextProps.params.accountId) || nextProps.withReplies !== this.props.withReplies) {\n      this.props.dispatch(fetchAccount(nextProps.params.accountId));\n      if (!nextProps.withReplies) {\n        this.props.dispatch(expandAccountFeaturedTimeline(nextProps.params.accountId));\n      }\n      this.props.dispatch(expandAccountTimeline(nextProps.params.accountId, { withReplies: nextProps.params.withReplies }));\n    }\n  }\n\n  handleLoadMore = maxId => {\n    this.props.dispatch(expandAccountTimeline(this.props.params.accountId, { maxId, withReplies: this.props.withReplies }));\n  }\n\n  render () {\n    const { shouldUpdateScroll, statusIds, featuredStatusIds, isLoading, hasMore } = this.props;\n\n    if (!statusIds && isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    return (\n      <Column>\n        <ColumnBackButton />\n\n        <StatusList\n          prepend={<HeaderContainer accountId={this.props.params.accountId} />}\n          scrollKey='account_timeline'\n          statusIds={statusIds}\n          featuredStatusIds={featuredStatusIds}\n          isLoading={isLoading}\n          hasMore={hasMore}\n          onLoadMore={this.handleLoadMore}\n          shouldUpdateScroll={shouldUpdateScroll}\n        />\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}