{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/standalone/compose/index.js","webpack:///./app/javascript/mastodon/containers/compose_container.js","webpack:///./app/javascript/packs/share.js"],"names":["compose_Compose","render","jsx_default","compose_form_container","notifications_container","modal_container","loading_bar_container","className","react_default","a","PureComponent","Object","locales","localeData","messages","index_es","compose_container_store","configureStore","initial_state","dispatch","store","compose_container_TimelineContainer","locale","this","props","es","loaded","ComposeContainer","__webpack_require__","default","React","ReactDOM","mountNode","document","getElementById","JSON","parse","getAttribute","createElement","_mastodon_common__WEBPACK_IMPORTED_MODULE_1__","_mastodon_load_polyfills__WEBPACK_IMPORTED_MODULE_0__","then","ready","catch","error","console"],"mappings":"gQAMqBA,4GAEnBC,kBACE,OAAAC,IAAA,gBAAAA,IAEKC,EAAA,MAFLD,IAGKE,EAAA,MAHLF,IAIKG,EAAA,MAJLH,IAKKI,EAAA,GALLC,UAKmC,qBARFC,EAAAC,EAAMC,mECIVC,OAAAC,EAAA,UAAAD,GAAzBE,eAAYC,aACpBH,OAAAI,EAAA,EAAAJ,CAAcE,GAEd,IAAMG,EAAQL,OAAAM,EAAA,EAAAN,GAEVO,EAAA,GACFF,EAAMG,SAASR,OAAAS,EAAA,EAAAT,CAAaO,EAAA,QAGTG,4GAMnBpB,kBAAU,IACAqB,EAAWC,KAAKC,MAAhBF,OAER,OAAApB,IACGa,EAAA,GADHO,OACwBA,EADxBR,SAC0CA,QAD1C,EAAAZ,IAEKuB,EAAA,UAFLL,MAEqBJ,QAFrB,EAAAd,IAGOF,YAZoCQ,EAAAC,EAAMC,4ECdrD,SAASgB,IACP,IAAMC,EAAmBC,EAAQ,KAA4CC,QACvEC,EAAQF,EAAQ,GAChBG,EAAWH,EAAQ,IACnBI,EAAYC,SAASC,eAAe,oBAE1C,GAAkB,OAAdF,EAAoB,CACtB,IAAMR,EAAQW,KAAKC,MAAMJ,EAAUK,aAAa,eAChDN,EAAS9B,OAAO6B,EAAAQ,cAACX,EAAqBH,GAAWQ,IAVrDrB,OAAA4B,EAAA,EAAA5B,GAmBAA,OAAA6B,EAAA,EAAA7B,GAAgB8B,KALhB,YAEEC,EADcd,EAAQ,IAAqBC,SACrCH,KAGmBiB,MAAM,SAAAC,GAC/BC,QAAQD,MAAMA","file":"share.js","sourcesContent":["import React from 'react';\nimport ComposeFormContainer from '../../compose/containers/compose_form_container';\nimport NotificationsContainer from '../../ui/containers/notifications_container';\nimport LoadingBarContainer from '../../ui/containers/loading_bar_container';\nimport ModalContainer from '../../ui/containers/modal_container';\n\nexport default class Compose extends React.PureComponent {\n\n  render () {\n    return (\n      <div>\n        <ComposeFormContainer />\n        <NotificationsContainer />\n        <ModalContainer />\n        <LoadingBarContainer className='loading-bar' />\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport configureStore from '../store/configureStore';\nimport { hydrateStore } from '../actions/store';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport { getLocale } from '../locales';\nimport Compose from '../features/standalone/compose';\nimport initialState from '../initial_state';\n\nconst { localeData, messages } = getLocale();\naddLocaleData(localeData);\n\nconst store = configureStore();\n\nif (initialState) {\n  store.dispatch(hydrateStore(initialState));\n}\n\nexport default class TimelineContainer extends React.PureComponent {\n\n  static propTypes = {\n    locale: PropTypes.string.isRequired,\n  };\n\n  render () {\n    const { locale } = this.props;\n\n    return (\n      <IntlProvider locale={locale} messages={messages}>\n        <Provider store={store}>\n          <Compose />\n        </Provider>\n      </IntlProvider>\n    );\n  }\n\n}\n","import loadPolyfills from '../mastodon/load_polyfills';\nimport { start } from '../mastodon/common';\n\nstart();\n\nfunction loaded() {\n  const ComposeContainer = require('../mastodon/containers/compose_container').default;\n  const React = require('react');\n  const ReactDOM = require('react-dom');\n  const mountNode = document.getElementById('mastodon-compose');\n\n  if (mountNode !== null) {\n    const props = JSON.parse(mountNode.getAttribute('data-props'));\n    ReactDOM.render(<ComposeContainer {...props} />, mountNode);\n  }\n}\n\nfunction main() {\n  const ready = require('../mastodon/ready').default;\n  ready(loaded);\n}\n\nloadPolyfills().then(main).catch(error => {\n  console.error(error);\n});\n"],"sourceRoot":""}